# Byte-compiled / optimized / DLL files
db.sqlite3

__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
env/
build/
staticfiles/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
node_modules/
lib/
lib64/
parts/
sdist/
var/
*.egg-info/
.installed.cfg
*.egg
*.js.map
*.css.map
main.styles.css

# Files that are now built automatically during heroku deployment
bundle.js
*.bundle.js
styles.css


# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt
Pipfile
Pipfile.lock

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*,cover
.hypothesis/

# Django stuff:
*.log
local_settings.py

# PyBuilder
target/

# IPython Notebook
.ipynb_checkpoints

# pyenv
.python-version

# dotenv
.env

# virtualenv
venv/
ENV/

# Emacs tmp files
*~
\#*

# Heroku local environment variables
.env

# VS Code Files
.vscode/

# IntelliJ IDEA files
*.iml
.idea/

# VisualStudio Code
.vscode/*
!.vscode/tasks.json
!.vscode/launch.json
*.code-workspace

# VisualStudioCode Patch
# Ignore all local history of files
.history
.ionide

# MacOS
.DS_Store

# Local database
mydatabase

# [vim] swap files
*.swp

# bin folder
bin/
.sh
share/
pyvenv.cfg


# Don't check in package-lock, as it will conflict with yarn.lock and break the heroku build
package-lock.json

# Docker environment config
docker_environment_init.sh

.envrc

# Exclude Makefiles
Makefile