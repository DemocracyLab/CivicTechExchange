# Generated by Django 3.1.4 on 2021-04-15 16:48

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('civictechprojects', '0042_auto_20210303_0016'),
    ]

    operations = [
        migrations.CreateModel(
            name='TaggedCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('avatar_url', models.CharField(blank=True, max_length=2083)),
                ('title', models.CharField(blank=True, max_length=100)),
                ('text', models.CharField(max_length=2000)),
                ('source', models.CharField(blank=True, max_length=2000)),
                ('priority', models.IntegerField(default=0)),
                ('active', models.BooleanField(default=True)),
                ('categories', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', related_name='category_testimonials', through='civictechprojects.TaggedCategory', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.AddField(
            model_name='taggedcategory',
            name='content_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='civictechprojects.testimonial'),
        ),
        migrations.AddField(
            model_name='taggedcategory',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='civictechprojects_taggedcategory_items', to='taggit.tag'),
        ),
    ]
