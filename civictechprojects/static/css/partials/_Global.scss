body {
  background-color: $color-background-default;
}

// footer buttons are difficult to theme in Bootstrap, so define manually
//TODO: Sass variables
.btn-footer {
  background-color: $color-background-light;
  color: $color-text-dark;
}
.btn-footer a,
.btn-footer a[type="button"] {
  color: $color-text-dark;
  text-decoration: none;
}
.btn-footer:hover,
.btn-footer:active {
  background-color: $color-orange-light;
  color: $color-text-dark;
  border-color: $color-orange-dark;
}
a.btn-footer:hover,
a.btn-footer:active,
a[type="button"].btn-footer:hover,
a[type="button"].btn-footer:active {
  text-decoration: none;
}

//Sets button states to be our specific values instead of default computed by Bootstrap
//I don't think we're going to call these colors manually at any point so no vars here
.btn-success:active,
.btn-success:hover {
  background-color: #395e00;
}
.btn-danger:active,
.btn-danger:hover {
  background-color: #b20000;
}
.btn-info:active,
.btn-info:hover {
  background-color: #025d87;
}

//Global override of disabled state input elements
input[type="submit"]:disabled {
  background: $color-grey-disabled;
  border: $color-disabled-border;
}


//class-based toggle of background color
.background-light {
  background-color: $color-background-light;
}

// .bounded-content should be used inside a .container-fluid; letting us have full width background with .container width content */
.bounded-content {
  margin: auto;
}
@include media-breakpoint-up(sm) {
  .bounded-content {
    width: 540px;
  }
}

@include media-breakpoint-up(md) {
  .bounded-content {
    width: 720px;
  }
}
@include media-breakpoint-up(lg) {
  .bounded-content {
    width: 960px;
  }
}
@include media-breakpoint-up(xl) {
  .bounded-content {
    width: 1140px;
  }
}
@include media-breakpoint-up(xxl) {
  .bounded-content {
    width: 1392px;
  }
}

// header text decorator
.side-lines:before,
.side-lines:after {
  background-color: $color-text-dark;
  content: "";
  display: inline-block;
  height: 1px;
  position: relative;
  vertical-align: middle;
  width: 20%;
}
.side-lines:before {
  right: 0.5em;
  margin-left: -21%;
}
.side-lines:after {
  left: 0.5em;
  margin-right: -21%;
}

// ======================== design system rules ========================
// font declarations (May 2021)
// mobile font declarations
html,
body {
  line-height: 1.618;
}
html {
  font-size: 16px; // so rem calculations stay the same
}
body {
  font-size: 15px; // base font size for mobile
}
// declaring .h1-h4 classes to overwrite Bootstrap, but we should only ever use the semantic headline/subtitle class names.
h1,
.h1,
.headline1 {
  font-size: 27px;
}
h2,
.h2,
.headline2 {
  font-size: 21px;
}
h3,
.h3,
.subtitle1 {
  font-size: 17px;
}
h4,
.h4,
.subtitle2 {
  font-size: 15px;
  font-weight: 600; // semibold
}
h1,
h2,
h3,
h4,
.h1,
.h2,
.h3,
.h4,
.headline1,
.headline2,
.subtitle1,
.subtitle2 {
  font-weight: 500; // medium
}
.overline {
  font-size: 13px;
}

// .btn {
// font-size: 15px;
// font-weight: 600; // semibold
// }

//desktop declarations
@include media-breakpoint-up(lg) {
  html,
  body {
    line-height: 1.5;
  }
  body {
    font-size: 16px;
  }
  h1,
  .h1 {
    font-size: 39px;
  }
  h2,
  .h2 {
    font-size: 23px;
  }
  h3,
  .h3 {
    font-size: 19px;
  }
  h4,
  .h4 {
    font-size: 16px;
  }
  h1,
  h2,
  h3,
  h4,
  .h1,
  .h2,
  .h3,
  .h4 {
    font-weight: 500; // medium
  }
  .overline {
    font-size: 13px;
  }

  // .btn {
  // font-size: 16px;
  // font-weight: 600;
  // }
}

// design system link colors are in _vars.scss and _bootstrapoverride, but we have some psuedoselectors here
//for on-page actions we want to appear as links (e.g. js onclick events)
// use pseudo-link as sparingly as possible - links should be links, doubly so since these won't respect :visited, etc
.pseudo-link {
  @extend a
}
a:active, .psuedo-link:active {
  color: $color-link-active;
  text-decoration: underline;
}
a:visited {
  color: $color-link-visited;
}
a.btn:visited, .btn:visited, button:visited {
  color: inherit; // buttons acting as links should not take visited color -- we'll have to revisit this when buttons are implemented from DS
}
