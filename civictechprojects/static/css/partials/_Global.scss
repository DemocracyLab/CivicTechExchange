body {
  background-color: $color-background-default;
}

//DemocracyLab button styles (overwrite/extend Bootstrap button rules)
// in general all buttons have a border, but some use the same color as the button to visually have none
// padding instead of selecting a specific height is for vertical align, but this could stand a rework later
// declares base classes first, then conditional active/hovers to manage .btn:not(disabled):not(.disabled) specificity

button,
.btn {
  font-weight: 500;
}

// "focus ring" outline. by default Bootstrap uses customizable box shadow, and we may want to investigate that further, date TBD -- May 25, 2022
button:focus,
.btn:focus {
  outline: 3px solid $color-blue-50;
  outline-offset: 1px;
}
// default button display rules, overriding the $theme-colors generated bases as needed
.btn-primary {
  color: $color-neutral-100;
  border-color: $color-brand-70;
}
.btn.btn-secondary {
  color: $color-neutral-90;
  border-color: $color-neutral-75;
  background-color: $color-neutral-10;
}
.btn-destructive {
  color: $color-red-80;
  border-color: $color-red-80;
  background-color: $color-background-light;
}
.btn-outline-destructive {
  color: $color-red-80;
  background-color: transparent;
}

.btn-ghost,
.btn-outline-ghost {
  color: $color-neutral-75;
}
.btn-outline-ghost {
  border-color: transparent;
  background-color: transparent;
}

//hover, active state rules must also meet the conditional of "not disabled," either psuedoselector or class
.btn:not(:disabled):not(.disabled) {
  &.btn-primary:active,
  &.btn-primary:hover {
    border-color: $color-brand-60;
    color: $color-neutral-100;
  }
  &.btn-primary:hover {
    background-color: $color-brand-60;
  }
  &.btn-primary:active {
    background-color: $color-brand-45;
  }
  &.btn-secondary:active,
  &.btn-secondary:hover,
  &.btn-outline-secondary:active,
  &.btn-outline-secondary:hover {
    background-color: $color-neutral-20;
    color: $color-neutral-90;
  }
  &.btn-success:active,
  &.btn-success:hover {
    background-color: $color-green-100;
  }
  &.btn-destructive:active,
  &.btn-destructive:hover,
  &.btn-outline-destructive:hover,
  &.btn-outline-destructive:active {
    background-color: $color-red-10;
  }
  &.btn-destructive:hover,
  &.btn-outline-destructive:hover {
    color: $color-red-80;
  }
  &.btn-destructive:active,
  &.btn-ouline-destructive:active {
    color: $color-red-100;
    border-color: $color-red-100;
  }

  &.btn-ghost:active,
  &.btn-ghost:hover,
  &.btn-outline-ghost:hover,
  &.btn-outline-ghost:active {
    border-color: $color-neutral-20;
    background-color: $color-neutral-20;
  }
  &.btn-ghost:active,
  &.btn-outline-ghost:active {
    color: $color-neutral-100;
  }
}
// unlike default bootstrap, we want all disabled buttons to look the same regardless of variant
button:disabled,
.btn:disabled {
  background-color: $color-neutral-25 !important;
  border-color: $color-neutral-35 !important;
  color: $color-text-disabled !important;
}

//Global override of disabled state input elements
input[type="submit"]:disabled {
  background-color: $color-neutral-25 !important;
  border-color: $color-neutral-35 !important;
  color: $color-text-disabled !important;
}

//class-based toggle of background color
.background-light {
  background-color: $color-background-light;
}

// .bounded-content should be used inside a .container-fluid; letting us have full width background with .container width content */
.bounded-content {
  margin: auto;
}
@include media-breakpoint-up(sm) {
  .bounded-content {
    width: 540px;
  }
}

@include media-breakpoint-up(md) {
  .bounded-content {
    width: 720px;
  }
}
@include media-breakpoint-up(lg) {
  .bounded-content {
    width: 960px;
  }
}
@include media-breakpoint-up(xl) {
  .bounded-content {
    width: 1140px;
  }
}
@include media-breakpoint-up(xxl) {
  .bounded-content {
    width: 1392px;
  }
}

// header text decorator, horizontal lines to either side of text
.side-lines:before,
.side-lines:after {
  background-color: $color-text-dark;
  content: "";
  display: inline-block;
  height: 1px;
  position: relative;
  vertical-align: middle;
  width: 20%;
}
.side-lines:before {
  right: 0.5em;
  margin-left: -21%;
}
.side-lines:after {
  left: 0.5em;
  margin-right: -21%;
}

// for both sponsor and site footers, we use some divider lines
.Footer-dividerline {
  border-top: 1px solid $color-border-weak;
  height: 1px;
  width: 100%;
  margin: 1rem 0;
}

// ======================== design system rules ========================
// font declarations (May 2021)
// mobile font declarations
html,
body {
  line-height: 1.618;
}
html {
  font-size: 16px; // so rem calculations stay the same
}
body {
  font-size: 15px; // base font size for mobile
}
// declaring .h1-h4 classes to overwrite Bootstrap, but we should only ever use the semantic headline/subtitle class names.
h1,
.h1,
.headline1 {
  font-size: 27px;
}
h2,
.h2,
.headline2 {
  font-size: 21px;
}
h3,
.h3,
.subtitle1 {
  font-size: 17px;
}
h4,
.h4,
.subtitle2 {
  font-size: 15px;
  font-weight: 600; // semibold
}
h1,
h2,
h3,
h4,
.h1,
.h2,
.h3,
.h4,
.headline1,
.headline2,
.subtitle1,
.subtitle2 {
  font-weight: 500; // medium
}
.overline {
  font-size: 13px;
}

//desktop declarations
@include media-breakpoint-up(lg) {
  html,
  body {
    line-height: 1.5;
  }
  body {
    font-size: 16px;
  }
  h1,
  .h1 {
    font-size: 39px;
  }
  h2,
  .h2 {
    font-size: 23px;
  }
  h3,
  .h3 {
    font-size: 19px;
  }
  h4,
  .h4 {
    font-size: 16px;
  }
  h1,
  h2,
  h3,
  h4,
  .h1,
  .h2,
  .h3,
  .h4 {
    font-weight: 500; // medium
  }
  .overline {
    font-size: 13px;
  }
}

// design system link colors are in _vars.scss and _bootstrapoverride, but we have some psuedoselectors here
//for on-page actions we want to appear as links (e.g. js onclick events)
// use pseudo-link as sparingly as possible - links should be links, doubly so since these won't respect :visited, etc
.pseudo-link {
  @extend a;
}
a:active,
.psuedo-link:active {
  color: $color-link-active;
  text-decoration: underline;
}
a:visited {
  color: $color-link-visited;
}
a.btn:visited,
.btn:visited,
button:visited {
  color: inherit; // buttons acting as links should not take visited color -- we'll have to revisit this when buttons are implemented from DS
}

//rotate utility classes
.rotate-45 {
  transform: rotate(45deg);
}
.rotate-90 {
  transform: rotate(90deg);
}
.rotate-180 {
  transform: rotate(180deg);
}